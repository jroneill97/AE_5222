clc; clear; close all;
E = 30e6;
G = 12e6;
T_max = 13600;
f = @(x2,x4) 2.21*x4 *x2^2;

buckling_load = @(b,t) (4.013*sqrt((E*G*b^2*t^6)/36)/196)*...
                       (1-(t/28)*sqrt(E/(4*G)));
M  = @(l)       P*(14 + 0.5*l);
R  = @(l,h,t)   0.5*sqrt(l^2 + (h + t)^2);
J  = @(l,h,t)   sqrt(2)*h*l*(((l^2)/12) + ((h + t)^2)/4);
    
shear_stress = @(l,h,t,b) sqrt((buckling_load(b,t)/(sqrt(2)*h*l))^2 + ...
                        (buckling_load(b,t)/sqrt(2)*h)*(M(l)/J(l,h,t)) + ...
                        (M(l)*R(l,h,t)/J(l,h,t))^2);
                    
bending_stress = @(l,h,t,b) 84*buckling_load(b,t)/(b*t^2);
end_deflection = @(l,h,t,b) 10976*buckling_load(b,t)/(E*b*t^3);

% Inequality Constraints

h1  = @(l,h,t,b,s1 ) b-2 + s1^2;
h2  = @(l,h,t,b,s2 ) 0.125-h + s2^2;
h3  = @(l,h,t,b,s3 ) h-2 + s3^2;
h4  = @(l,h,t,b,s4 ) h-b + s4^2;
h5  = @(l,h,t,b,s5 ) 0.1-t + s5^2;
h6  = @(l,h,t,b,s6 ) t-10 + s6^2;
h7  = @(l,h,t,b,s7 ) 0.1-l + s7^2;
h8  = @(l,h,t,b,s8 ) l-10 + s8^2;
h9  = @(l,h,t,b,s9 ) 6000-buckling_load(b,t) + s9^2;
h10 = @(l,h,t,b,s10) shear_stress(l,h,t,b)-13600 + s10^2;
h11 = @(l,h,t,b,s11) bending_stress(l,h,t,b)-30000 + s11^2;
h12 = @(l,h,t,b,s12) end_deflection(l,h,t,b)-0.25 + s12^2;





syms l h t b
syms p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12
syms s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12

state_array = [x1 x2 x3 x4 x5 x6 x7 x8...
               p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16...
               s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12];
           
J = gradient(L,state_array);

for k = [1:length(J)]
    fprintf("dL_d" + string(state_array(k)) +...
            " = " + string(J(k)) + ";\n");
end
options=optimset('MaxFunEvals',100000);
options=optimset(options,'MaxIter',100000);
options=optimset(options, 'disp','iter','LargeScale','off','TolFun',.001);
int_guess = ones(1,36);
int_guess(3) = 5;
int_guess(1) = 1;
int_guess(2) = 0.1;
state_out = fsolve(@derivatives_question_8,int_guess,options);

% for k = [1:length(state_out)]
%     fprintf(string(state_array(k)) +...
%             " = " + string(state_out(k)) + "\n");
% end

fprintf("\nl = %0.2f inches\n",state_out(4));
fprintf("b = %0.2f inches\n",state_out(1));
fprintf("t = %0.2f inches\n",state_out(3));
fprintf("h = %0.2f inches\n",state_out(2));
fprintf("cost = $%0.2f\n",f(state_out(2),state_out(4)));